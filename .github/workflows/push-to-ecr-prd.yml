name: prd-push-to-ecr

on:
  release:
    types: [published]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: episoden/peerjs-prd

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACTION_ENV_PRD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ACTION_ENV_PRD_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract version from tag ref
      id: extract-version
      run: |
        version=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')
        echo ${{ github.ref }}
        echo "::set-output name=version::$version"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Production build, release version tag, and push image to Amazon ECR
      id: build-image-to-ecr
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        RELEASE_VERSION: ${{ steps.extract-version.outputs.version }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        BUILD_ARGS="--build-arg SERVER_PROFILE=production \
                        --build-arg APP_VERSION=$RELEASE_VERSION"
        docker buildx build --platform linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION $BUILD_ARGS --load .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION" >> $GITHUB_OUTPUT
